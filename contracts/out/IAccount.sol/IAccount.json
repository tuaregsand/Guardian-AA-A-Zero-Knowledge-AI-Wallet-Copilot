{"abi":[{"type":"function","name":"validateUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct UserOperationLib.UserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"callGasLimit","type":"uint256","internalType":"uint256"},{"name":"verificationGasLimit","type":"uint256","internalType":"uint256"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"maxFeePerGas","type":"uint256","internalType":"uint256"},{"name":"maxPriorityFeePerGas","type":"uint256","internalType":"uint256"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"missingAccountFunds","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperationLib.UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate the signature and nonce, and pay the entryPoint if required\",\"params\":{\"missingAccountFunds\":\"The amount to pay the entryPoint (if any)\",\"userOp\":\"The user operation to validate\",\"userOpHash\":\"The hash of the user operation\"},\"returns\":{\"validationData\":\"Packed validation data:         - 0: validation success         - 1: signature failure         - otherwise: packed ValidAfter (6 bytes) and ValidUntil (6 bytes)\"}}},\"title\":\"IAccount\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate a user operation\"}},\"notice\":\"Interface for ERC-4337 account contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=.yarn/unplugged/@openzeppelin-contracts-upgradeable-virtual-5480334e81/node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=.yarn/unplugged/@openzeppelin-contracts-npm-5.3.0-731ea0cb78/node_modules/@openzeppelin/contracts/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IAccount.sol\":{\"keccak256\":\"0x591c08fa881f56284c38d9fcedbd44c4a019781eb22c37271b963e728ebc0a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73395a7edaca21bfd10939933bf0086f30a2a4f72b9267944dfa0eee9922e4ff\",\"dweb:/ipfs/QmTpszCDm9oShMtU3RQPfHtFh9R2AXPEeivHgcPxQ2g6VD\"]},\"src/interfaces/UserOperation.sol\":{\"keccak256\":\"0x670f4b4e124a2562a37a6b2cbc21ca63b8318d90ae67e07836ca1e63023ce104\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a645ea3165e8496173ae171297d4d138504a271f3d6f1ae452a9f17d2f8b33c\",\"dweb:/ipfs/QmQVjVa1eTDBAxPHAP9rmLgtqnn3EqHmMtWqmUHrJvB1cu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct UserOperationLib.UserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"details":"Must validate the signature and nonce, and pay the entryPoint if required","params":{"missingAccountFunds":"The amount to pay the entryPoint (if any)","userOp":"The user operation to validate","userOpHash":"The hash of the user operation"},"returns":{"validationData":"Packed validation data:         - 0: validation success         - 1: signature failure         - otherwise: packed ValidAfter (6 bytes) and ValidUntil (6 bytes)"}}},"version":1},"userdoc":{"kind":"user","methods":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"Validate a user operation"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=.yarn/unplugged/@openzeppelin-contracts-upgradeable-virtual-5480334e81/node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=.yarn/unplugged/@openzeppelin-contracts-npm-5.3.0-731ea0cb78/node_modules/@openzeppelin/contracts/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IAccount.sol":"IAccount"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/interfaces/IAccount.sol":{"keccak256":"0x591c08fa881f56284c38d9fcedbd44c4a019781eb22c37271b963e728ebc0a58","urls":["bzz-raw://73395a7edaca21bfd10939933bf0086f30a2a4f72b9267944dfa0eee9922e4ff","dweb:/ipfs/QmTpszCDm9oShMtU3RQPfHtFh9R2AXPEeivHgcPxQ2g6VD"],"license":"MIT"},"src/interfaces/UserOperation.sol":{"keccak256":"0x670f4b4e124a2562a37a6b2cbc21ca63b8318d90ae67e07836ca1e63023ce104","urls":["bzz-raw://3a645ea3165e8496173ae171297d4d138504a271f3d6f1ae452a9f17d2f8b33c","dweb:/ipfs/QmQVjVa1eTDBAxPHAP9rmLgtqnn3EqHmMtWqmUHrJvB1cu"],"license":"MIT"}},"version":1},"id":48}