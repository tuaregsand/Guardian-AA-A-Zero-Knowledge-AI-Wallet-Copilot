{"abi":[{"type":"function","name":"postOp","inputs":[{"name":"mode","type":"uint8","internalType":"enum IPaymaster.PostOpMode"},{"name":"context","type":"bytes","internalType":"bytes"},{"name":"actualGasCost","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validatePaymasterUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct UserOperationLib.UserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"callGasLimit","type":"uint256","internalType":"uint256"},{"name":"verificationGasLimit","type":"uint256","internalType":"uint256"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"maxFeePerGas","type":"uint256","internalType":"uint256"},{"name":"maxPriorityFeePerGas","type":"uint256","internalType":"uint256"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"maxCost","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"context","type":"bytes","internalType":"bytes"},{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperationLib.UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"details\":\"Called after the user operation execution\",\"params\":{\"actualGasCost\":\"The actual gas cost of the operation\",\"context\":\"The context returned by validatePaymasterUserOp\",\"mode\":\"The post-operation mode\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must verify the sender is the entryPoint\",\"params\":{\"maxCost\":\"The maximum cost of the operation\",\"userOp\":\"The user operation\",\"userOpHash\":\"The hash of the user operation\"},\"returns\":{\"context\":\"Value to pass to postOp\",\"validationData\":\"Validation result (0 for success, 1 for sig fail, or time range)\"}}},\"title\":\"IPaymaster\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"Post-operation handler\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate a user operation and agree to pay for it\"}},\"notice\":\"Interface for paymasters that sponsor user operations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=.yarn/unplugged/@openzeppelin-contracts-upgradeable-virtual-5480334e81/node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=.yarn/unplugged/@openzeppelin-contracts-npm-5.3.0-731ea0cb78/node_modules/@openzeppelin/contracts/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x52adf914e316941844551fc7be88f7cf6ff4ff6bd0ac0d3e9a5a5f6de75b0d58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c1b491b9987be4cf401ccc5699fda11bcc4f7386eb8afd61cbf03d6e4e9757e\",\"dweb:/ipfs/QmfJSDyyHM8gBHKp81AGKASgXzK81thXmuJitKkqynoFwC\"]},\"src/interfaces/UserOperation.sol\":{\"keccak256\":\"0x670f4b4e124a2562a37a6b2cbc21ca63b8318d90ae67e07836ca1e63023ce104\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a645ea3165e8496173ae171297d4d138504a271f3d6f1ae452a9f17d2f8b33c\",\"dweb:/ipfs/QmQVjVa1eTDBAxPHAP9rmLgtqnn3EqHmMtWqmUHrJvB1cu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"postOp"},{"inputs":[{"internalType":"struct UserOperationLib.UserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"postOp(uint8,bytes,uint256)":{"details":"Called after the user operation execution","params":{"actualGasCost":"The actual gas cost of the operation","context":"The context returned by validatePaymasterUserOp","mode":"The post-operation mode"}},"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"details":"Must verify the sender is the entryPoint","params":{"maxCost":"The maximum cost of the operation","userOp":"The user operation","userOpHash":"The hash of the user operation"},"returns":{"context":"Value to pass to postOp","validationData":"Validation result (0 for success, 1 for sig fail, or time range)"}}},"version":1},"userdoc":{"kind":"user","methods":{"postOp(uint8,bytes,uint256)":{"notice":"Post-operation handler"},"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"Validate a user operation and agree to pay for it"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=.yarn/unplugged/@openzeppelin-contracts-upgradeable-virtual-5480334e81/node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=.yarn/unplugged/@openzeppelin-contracts-npm-5.3.0-731ea0cb78/node_modules/@openzeppelin/contracts/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IPaymaster.sol":"IPaymaster"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/interfaces/IPaymaster.sol":{"keccak256":"0x52adf914e316941844551fc7be88f7cf6ff4ff6bd0ac0d3e9a5a5f6de75b0d58","urls":["bzz-raw://2c1b491b9987be4cf401ccc5699fda11bcc4f7386eb8afd61cbf03d6e4e9757e","dweb:/ipfs/QmfJSDyyHM8gBHKp81AGKASgXzK81thXmuJitKkqynoFwC"],"license":"MIT"},"src/interfaces/UserOperation.sol":{"keccak256":"0x670f4b4e124a2562a37a6b2cbc21ca63b8318d90ae67e07836ca1e63023ce104","urls":["bzz-raw://3a645ea3165e8496173ae171297d4d138504a271f3d6f1ae452a9f17d2f8b33c","dweb:/ipfs/QmQVjVa1eTDBAxPHAP9rmLgtqnn3EqHmMtWqmUHrJvB1cu"],"license":"MIT"}},"version":1},"id":51}